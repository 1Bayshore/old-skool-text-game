========================================
New DebugLog session started Fri Sep  9 01:35:10 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
beat
Moving
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x104b4fc18>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
beat
beat
Moving
Trying to move to the south exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
beat
beat
beat
Moving
Trying to move to the north exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104b4ba90>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
beat
Moving
Trying to move to the east exit!
other creatures in this room include: {<player.Player object at 0x104b4fc18>}
perceived a message The bird goes east. in Creature.perceive()
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room woods
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104b4ba58>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x104b4ba90>>
self.contents = [<container.Container object at 0x104b4bb38>, <creature.NPC object at 0x104b4bc18>, <player.Player object at 0x104b4fc18>]
contents_minus_user = [<container.Container object at 0x104b4bb38>, <creature.NPC object at 0x104b4bc18>]
beat
beat
Moving
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x104b4fc18>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104b4ba90>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x104b4ba58>>
self.contents = [<creature.NPC object at 0x104b4bc18>, <player.Player object at 0x104b4fc18>]
contents_minus_user = [<creature.NPC object at 0x104b4bc18>]
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x104b4ba58>>
self.contents = [<creature.NPC object at 0x104b4bc18>, <player.Player object at 0x104b4fc18>]
contents_minus_user = [<creature.NPC object at 0x104b4bc18>]
beat
Moving
Trying to move to the southwest exit!
other creatures in this room include: {<player.Player object at 0x104b4fc18>}
perceived a message The bird goes southwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room kitchen
beat
beat
beat
Moving
Trying to move to the southeast exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
beat
beat
beat
Moving
Trying to move to the southeast exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 150000 weight and 6000 volume
bedroom has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room bedroom
beat
beat
beat
Moving
Trying to move to the northwest exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
beat
beat
beat
Moving
Trying to move to the north exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 79 weight and 66 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: {<player.Player object at 0x104b4fc18>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room entryway
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x104b4ba58>>
self.contents = [<player.Player object at 0x104b4fc18>, <creature.NPC object at 0x104b4bc18>]
contents_minus_user = [<creature.NPC object at 0x104b4bc18>]
beat
========================================
New DebugLog session started Sat Sep 10 19:49:41 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103081c88>>
self.contents = [<container.Container object at 0x103081d30>, <creature.NPC object at 0x103081e10>, <player.Player object at 0x103087cc0>]
contents_minus_user = [<container.Container object at 0x103081d30>, <creature.NPC object at 0x103081e10>]
beat
User input with aliases resolved:
    take bird 
parser: a is 0, self.words[a] is take
parser: a is 1, self.words[a] is bird
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO bird, but supports verb take
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bird, but supports verb take
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO bird, but supports verb take
parser: possible_nouns includes bird 
  parser: found a match! Checking whether bird supports verb 'take'
    parser: it does! Setting oDO to bird
bird . verb_dict[take]= <bound method Thing.take of <creature.NPC object at 0x103081e10>>
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for bird's 200 weight and 0 volume
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: set()
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103081c88>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
User input with aliases resolved:
    go south 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is south
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO south, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103081c50>>
verb function go_to: words == 
['go', 'south']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southeast
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO southeast, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103081be0>>
verb function go_to: words == 
['go', 'southeast']
in insert
going to start looping
done looping - carrying 150000 weight and 6000 volume
bedroom has room for testplayer's 79 weight and 66 volume
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
Replacing alias 'd' with expansion 'go down'
User input with aliases resolved:
    go down 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is down
parser: possible_nouns includes bedroom 
  parser: doesn't match user-typed DO down, but supports verb go
    parser: setting oDO to bedroom
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
parser: possible_nouns includes bed 
parser: possible_nouns includes testplayer 
bedroom . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103081ba8>>
verb function go_to: words == 
['go', 'down']
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
beat
beat
beat
beat
beat
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
beat
beat
beat
beat
beat
beat
beat
beat
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: set()
User input with aliases resolved:
    drop bird 
parser: a is 0, self.words[a] is drop
parser: a is 1, self.words[a] is bird
parser: possible_nouns includes bedroom 
  parser: doesn't match user-typed DO bird, but supports verb drop
    parser: setting oDO to bedroom
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bird, but supports verb drop
parser: possible_nouns includes bird 
  parser: found a match! Checking whether bird supports verb 'drop'
    parser: it does! Setting oDO to bird
bird . verb_dict[drop]= <bound method Thing.drop of <creature.NPC object at 0x103081e10>>
in insert
going to start looping
done looping - carrying 150079 weight and 6066 volume
bedroom has room for bird's 200 weight and 0 volume
beat
beat
beat
Trying to move to the northwest exit!
other creatures in this room include: {<player.Player object at 0x103087cc0>}
perceived a message The bird goes northwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
beat
beat
beat
other creatures in this room include: set()
beat
beat
beat
other creatures in this room include: set()
beat
beat
beat
other creatures in this room include: set()
beat
beat
beat
other creatures in this room include: set()
beat
beat
beat
Trying to move to the north exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
beat
beat
other creatures in this room include: set()
========================================
New DebugLog session started Sat Sep 10 19:54:40 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
========================================
New DebugLog session started Sun Sep 11 23:52:40 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
User input with aliases resolved:
    get bird 
parser: a is 0, self.words[a] is get
parser: a is 1, self.words[a] is bird
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO bird, but supports verb get
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bird, but supports verb get
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO bird, but supports verb get
parser: possible_nouns includes bird 
  parser: found a match! Checking whether bird supports verb 'get'
    parser: it does! Setting oDO to bird
bird . verb_dict[get]= <bound method Thing.take of <creature.NPC object at 0x103181e48>>
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for bird's 200 weight and 0 volume
beat
beat
no exits, returning
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
no exits, returning
beat
beat
beat
no exits, returning
beat
beat
beat
no exits, returning
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: set()
========================================
New DebugLog session started Sat Sep 24 20:41:25 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
beat
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
beat
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103181d68>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103181d30>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 179 weight and 76 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room woods
beat
beat
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103181d68>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103181d30>>
self.contents = [<creature.NPC object at 0x103181ef0>, <player.Player object at 0x103188cf8>]
contents_minus_user = [<creature.NPC object at 0x103181ef0>]
beat
beat
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
beat
beat
Trying to move to the south exit!
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird goes south. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
Replacing alias 's' with expansion 'go south'
User input with aliases resolved:
    go south 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is south
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO south, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103181d30>>
verb function go_to: words == 
['go', 'south']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird says: Tweet! in Creature.perceive()
beat
beat
beat
Trying to move to the northwest exit!
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird goes northwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room kitchen
Replacing alias 'nw' with expansion 'go northwest'
User input with aliases resolved:
    go northwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is northwest
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO northwest, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103181cc0>>
verb function go_to: words == 
['go', 'northwest']
in insert
going to start looping
done looping - carrying 1200 weight and 1 volume
kitchen has room for testplayer's 79 weight and 66 volume
beat
beat
beat
Trying to move to the southeast exit!
other creatures in this room include: {<player.Player object at 0x103188cf8>}
perceived a message The bird goes southeast. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
========================================
New DebugLog session started Sat Sep 24 20:45:49 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x103b513c8>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103b4ad68>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
beat
beat
beat
beat
Trying to move to the southwest exit!
other creatures in this room include: {<player.Player object at 0x103b513c8>}
perceived a message The bird goes southwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room kitchen
beat
Replacing alias 'sw' with expansion 'go southwest'
User input with aliases resolved:
    go southwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southwest
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO southwest, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103b4ad30>>
verb function go_to: words == 
['go', 'southwest']
in insert
going to start looping
done looping - carrying 1200 weight and 1 volume
kitchen has room for testplayer's 79 weight and 66 volume
beat
beat
other creatures in this room include: {<player.Player object at 0x103b513c8>}
perceived a message The bird says: Testing 1 in Creature.perceive()
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103b513c8>}
perceived a message The bird says: testing 2 in Creature.perceive()
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103b513c8>}
perceived a message The bird says: testing done! in Creature.perceive()
beat
beat
beat
Trying to move to the northeast exit!
other creatures in this room include: {<player.Player object at 0x103b513c8>}
perceived a message The bird goes northeast. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
Replacing alias 'nw' with expansion 'go northwest'
User input with aliases resolved:
    go northwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is northwest
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO northwest, but supports verb go
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
parser: possible_nouns includes plate 
parser: possible_nouns includes testplayer 
kitchen . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103b4acf8>>
verb function go_to: words == 
['go', 'northwest']
beat
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
parser: possible_nouns includes plate 
parser: possible_nouns includes testplayer 
kitchen . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103b4acf8>>
verb function go_to: words == 
['go', 'east']
beat
Replacing alias 'ne' with expansion 'go northeast'
User input with aliases resolved:
    go northeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is northeast
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO northeast, but supports verb go
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
parser: possible_nouns includes plate 
parser: possible_nouns includes testplayer 
kitchen . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103b4acf8>>
verb function go_to: words == 
['go', 'northeast']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the east exit!
other creatures in this room include: {<player.Player object at 0x103b513c8>}
perceived a message The bird goes east. in Creature.perceive()
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room woods
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103b4ad30>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103b4ad68>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103b4ad30>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
========================================
New DebugLog session started Sat Sep 24 20:47:13 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
beat
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103881d68>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
beat
beat
Trying to move to the southwest exit!
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird goes southwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room kitchen
Replacing alias 'sw' with expansion 'go southwest'
User input with aliases resolved:
    go southwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southwest
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO southwest, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103881d30>>
verb function go_to: words == 
['go', 'southwest']
in insert
going to start looping
done looping - carrying 1200 weight and 1 volume
kitchen has room for testplayer's 79 weight and 66 volume
beat
beat
beat
Trying to move to the southeast exit!
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird goes southeast. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southeast
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO southeast, but supports verb go
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
parser: possible_nouns includes plate 
parser: possible_nouns includes testplayer 
kitchen . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103881cf8>>
verb function go_to: words == 
['go', 'southeast']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
beat
beat
Trying to move to the southeast exit!
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird goes southeast. in Creature.perceive()
in insert
going to start looping
done looping - carrying 150000 weight and 6000 volume
bedroom has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room bedroom
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southeast
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO southeast, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103881cc0>>
verb function go_to: words == 
['go', 'southeast']
in insert
going to start looping
done looping - carrying 150200 weight and 6000 volume
bedroom has room for testplayer's 79 weight and 66 volume
beat
beat
beat
Trying to move to the northwest exit!
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird goes northwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
Replacing alias 'nw' with expansion 'go northwest'
User input with aliases resolved:
    go northwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is northwest
parser: possible_nouns includes bedroom 
  parser: doesn't match user-typed DO northwest, but supports verb go
    parser: setting oDO to bedroom
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bed 
parser: possible_nouns includes testplayer 
bedroom . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103881c88>>
verb function go_to: words == 
['go', 'northwest']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
beat
beat
Trying to move to the southeast exit!
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird goes southeast. in Creature.perceive()
in insert
going to start looping
done looping - carrying 150000 weight and 6000 volume
bedroom has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room bedroom
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southeast
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO southeast, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103881cc0>>
verb function go_to: words == 
['go', 'southeast']
in insert
going to start looping
done looping - carrying 150200 weight and 6000 volume
bedroom has room for testplayer's 79 weight and 66 volume
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird says: Tweet! in Creature.perceive()
beat
beat
beat
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird says: Testing 1 in Creature.perceive()
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird says: testing 2 in Creature.perceive()
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x103888cf8>}
perceived a message The bird says: testing done! in Creature.perceive()
========================================
New DebugLog session started Sun Sep 25 19:38:04 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
User input with aliases resolved:
    put shoe in box 
parser: a is 0, self.words[a] is put
parser: a is 1, self.words[a] is shoe
parser: a is 2, self.words[a] is in
parser: a is 3, self.words[a] is box
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80f0>>
self.contents = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>]
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103ba80f0>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80b8>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80b8>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Trying to move to the east exit!
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird goes east. in Creature.perceive()
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room woods
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103ba80b8>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80f0>>
self.contents = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80f0>>
self.contents = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>]
beat
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird says: Tweet! in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80f0>>
self.contents = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80f0>>
self.contents = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80f0>>
self.contents = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<container.Container object at 0x103ba82b0>, <creature.NPC object at 0x103ba8390>]
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103ba80f0>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80b8>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103ba80b8>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Trying to move to the southwest exit!
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird goes southwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room kitchen
Replacing alias 'sw' with expansion 'go southwest'
User input with aliases resolved:
    go southwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southwest
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO southwest, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103ba80b8>>
verb function go_to: words == 
['go', 'southwest']
in insert
going to start looping
done looping - carrying 1200 weight and 1 volume
kitchen has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes plate 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
kitchen . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68e80>>
self.contents = [<thing.Thing object at 0x103ba8320>, <creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<thing.Thing object at 0x103ba8320>, <creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes plate 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
kitchen . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68e80>>
self.contents = [<thing.Thing object at 0x103ba8320>, <creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<thing.Thing object at 0x103ba8320>, <creature.NPC object at 0x103ba8390>]
beat
Trying to move to the southeast exit!
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird goes southeast. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southeast
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO southeast, but supports verb go
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
parser: possible_nouns includes plate 
parser: possible_nouns includes testplayer 
kitchen . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103b68e80>>
verb function go_to: words == 
['go', 'southeast']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird says: Testing 1 in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird says: testing 2 in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird says: testing done! in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
other creatures in this room include: {<player.Player object at 0x103b68b70>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
hallway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103b68be0>>
self.contents = [<creature.NPC object at 0x103ba8390>, <player.Player object at 0x103b68b70>]
contents_minus_user = [<creature.NPC object at 0x103ba8390>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
========================================
New DebugLog session started Sun Sep 25 19:58:56 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x10414b978>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104158048>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x10414bfd0>>
self.contents = [<creature.NPC object at 0x1041581d0>, <player.Player object at 0x10414b978>]
contents_minus_user = [<creature.NPC object at 0x1041581d0>]
beat
========================================
New DebugLog session started Sun Sep 25 20:07:10 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090080>>
self.contents = [<container.Container object at 0x103090128>, <creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<container.Container object at 0x103090128>, <creature.NPC object at 0x103090208>]
beat
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090080>>
self.contents = [<container.Container object at 0x103090128>, <creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<container.Container object at 0x103090128>, <creature.NPC object at 0x103090208>]
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103090080>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090048>>
self.contents = [<creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<creature.NPC object at 0x103090208>]
beat
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090048>>
self.contents = [<creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<creature.NPC object at 0x103090208>]
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090048>>
self.contents = [<creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<creature.NPC object at 0x103090208>]
beat
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird says: Testing 1 in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090048>>
self.contents = [<creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<creature.NPC object at 0x103090208>]
beat
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird says: testing 2 in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090048>>
self.contents = [<creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<creature.NPC object at 0x103090208>]
beat
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird says: testing done! in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090048>>
self.contents = [<creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<creature.NPC object at 0x103090208>]
beat
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090048>>
self.contents = [<creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<creature.NPC object at 0x103090208>]
beat
Trying to move to the east exit!
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird goes east. in Creature.perceive()
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room woods
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103090048>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090080>>
self.contents = [<container.Container object at 0x103090128>, <creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<container.Container object at 0x103090128>, <creature.NPC object at 0x103090208>]
beat
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird says: Tweet! in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103090080>>
self.contents = [<container.Container object at 0x103090128>, <creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<container.Container object at 0x103090128>, <creature.NPC object at 0x103090208>]
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103090080>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the south exit!
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird goes south. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
Replacing alias 's' with expansion 'go south'
User input with aliases resolved:
    go south 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is south
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO south, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103090048>>
verb function go_to: words == 
['go', 'south']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the southeast exit!
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird goes southeast. in Creature.perceive()
in insert
going to start looping
done looping - carrying 150000 weight and 6000 volume
bedroom has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room bedroom
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southeast
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO southeast, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103081a90>>
verb function go_to: words == 
['go', 'southeast']
in insert
going to start looping
done looping - carrying 150200 weight and 6000 volume
bedroom has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes bedroom 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to bedroom
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bed 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
bedroom . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103081a20>>
self.contents = [<thing.Thing object at 0x1030900b8>, <creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<thing.Thing object at 0x1030900b8>, <creature.NPC object at 0x103090208>]
beat
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes bedroom 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to bedroom
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bed 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
bedroom . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103081a20>>
self.contents = [<thing.Thing object at 0x1030900b8>, <creature.NPC object at 0x103090208>, <player.Player object at 0x1030819b0>]
contents_minus_user = [<thing.Thing object at 0x1030900b8>, <creature.NPC object at 0x103090208>]
beat
Trying to move to the northwest exit!
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird goes northwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
Replacing alias 'nw' with expansion 'go northwest'
User input with aliases resolved:
    go northwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is northwest
parser: possible_nouns includes bedroom 
  parser: doesn't match user-typed DO northwest, but supports verb go
    parser: setting oDO to bedroom
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bed 
parser: possible_nouns includes testplayer 
bedroom . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103081a20>>
verb function go_to: words == 
['go', 'northwest']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the southeast exit!
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird goes southeast. in Creature.perceive()
in insert
going to start looping
done looping - carrying 150000 weight and 6000 volume
bedroom has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room bedroom
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southeast
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO southeast, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103081a90>>
verb function go_to: words == 
['go', 'southeast']
in insert
going to start looping
done looping - carrying 150200 weight and 6000 volume
bedroom has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the northwest exit!
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird goes northwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
Replacing alias 'nw' with expansion 'go northwest'
User input with aliases resolved:
    go northwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is northwest
parser: possible_nouns includes bedroom 
  parser: doesn't match user-typed DO northwest, but supports verb go
    parser: setting oDO to bedroom
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bed 
parser: possible_nouns includes testplayer 
bedroom . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103081a20>>
verb function go_to: words == 
['go', 'northwest']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the northwest exit!
other creatures in this room include: {<player.Player object at 0x1030819b0>}
perceived a message The bird goes northwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room kitchen
Replacing alias 'nw' with expansion 'go northwest'
User input with aliases resolved:
    go northwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is northwest
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO northwest, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x103081a90>>
verb function go_to: words == 
['go', 'northwest']
in insert
going to start looping
done looping - carrying 1200 weight and 1 volume
kitchen has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes plate 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
kitchen . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x103081fd0>>
========================================
New DebugLog session started Sat Oct  8 20:10:06 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for tree's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x10388a128>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes tree 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388ab38>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the southwest exit!
other creatures in this room include: {<player.Player object at 0x10388a128>}
perceived a message The bird goes southwest. in Creature.perceive()
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room kitchen
Replacing alias 'sw' with expansion 'go southwest'
User input with aliases resolved:
    go go southwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is go
parser: a is 2, self.words[a] is southwest
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO go southwest, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388aa58>>
verb function go_to: words == 
['go', 'go', 'southwest']
beat
Trying to move to the southeast exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
beat
Trying to move to the north exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 79 weight and 66 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: {<player.Player object at 0x10388a128>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room entryway
Replacing alias 'sw' with expansion 'go southwest'
User input with aliases resolved:
    go southwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southwest
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO southwest, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388aa58>>
verb function go_to: words == 
['go', 'southwest']
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room woods
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southeast
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO southeast, but supports verb go
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
parser: possible_nouns includes plate 
parser: possible_nouns includes testplayer 
kitchen . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388a978>>
verb function go_to: words == 
['go', 'southeast']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
Replacing alias 'n' with expansion 'go north'
User input with aliases resolved:
    go north 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is north
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO north, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388a898>>
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388aa58>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: {<player.Player object at 0x10388a128>}
perceived a message The bird says: tweet tweet in Creature.perceive()
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes tree 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388ab38>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
Replacing alias 'sw' with expansion 'go southwest'
User input with aliases resolved:
    go southwest 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southwest
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO southwest, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388aa58>>
verb function go_to: words == 
['go', 'southwest']
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
Replacing alias 'se' with expansion 'go southeast'
User input with aliases resolved:
    go southeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is southeast
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO southeast, but supports verb go
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
parser: possible_nouns includes plate 
parser: possible_nouns includes testplayer 
kitchen . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388a978>>
verb function go_to: words == 
['go', 'southeast']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the west exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388a898>>
verb function go_to: words == 
['go', 'west']
beat
Replacing alias 'n' with expansion 'go north'
User input with aliases resolved:
    go north 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is north
parser: possible_nouns includes hallway 
  parser: doesn't match user-typed DO north, but supports verb go
    parser: setting oDO to hallway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
hallway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388a898>>
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: {<player.Player object at 0x10388a128>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388aa58>>
verb function go_to: words == 
['go', 'west']
beat
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10388aa58>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes tree 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x10388ab38>>
self.contents = [<thing.HiddenExitTrigger object at 0x10388acf8>, <container.Container object at 0x10388af28>, <player.Player object at 0x10388a128>]
contents_minus_user = [<thing.HiddenExitTrigger object at 0x10388acf8>, <container.Container object at 0x10388af28>]
beat
User input with aliases resolved:
    get bag 
parser: a is 0, self.words[a] is get
parser: a is 1, self.words[a] is bag
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO bag, but supports verb get
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bag, but supports verb get
parser: possible_nouns includes tree 
  parser: doesn't match user-typed DO bag, but supports verb get
parser: possible_nouns includes bag 
  parser: found a match! Checking whether bag supports verb 'get'
    parser: it does! Setting oDO to bag
bag . verb_dict[get]= <bound method Thing.take of <container.Container object at 0x10388af28>>
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for bag's 100 weight and 10 volume
beat
other creatures in this room include: set()
User input with aliases resolved:
    drop bag 
parser: a is 0, self.words[a] is drop
parser: a is 1, self.words[a] is bag
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bag, but supports verb drop
    parser: setting oDO to testplayer
parser: possible_nouns includes bag 
  parser: found a match! Checking whether bag supports verb 'drop'
    parser: it does! Setting oDO to bag
bag . verb_dict[drop]= <bound method Thing.drop of <container.Container object at 0x10388af28>>
in insert
going to start looping
done looping - carrying 79 weight and 66 volume
woods has room for bag's 100 weight and 10 volume
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 179 weight and 76 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: {<player.Player object at 0x10388a128>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room woods
User input with aliases resolved:
    examine bag 
parser: a is 0, self.words[a] is examine
parser: a is 1, self.words[a] is bag
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO bag, but supports verb examine
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bag, but supports verb examine
parser: possible_nouns includes tree 
  parser: doesn't match user-typed DO bag, but supports verb examine
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bag, but supports verb examine
parser: possible_nouns includes bag 
  parser: found a match! Checking whether bag supports verb 'examine'
    parser: it does! Setting oDO to bag
bag . verb_dict[examine]= <bound method Container.look_at of <container.Container object at 0x10388af28>>
Called Container.look_at()
Called Thing.look_at()
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x10388a128>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
User input with aliases resolved:
    examine tree 
parser: a is 0, self.words[a] is examine
parser: a is 1, self.words[a] is tree
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO tree, but supports verb examine
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO tree, but supports verb examine
parser: possible_nouns includes tree 
  parser: found a match! Checking whether tree supports verb 'examine'
    parser: it does! Setting oDO to tree
tree . verb_dict[examine]= <bound method Thing.look_at of <thing.HiddenExitTrigger object at 0x10388acf8>>
Called Thing.look_at()
beat
User input with aliases resolved:
    pull tree 
parser: a is 0, self.words[a] is pull
parser: a is 1, self.words[a] is tree
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes tree 
  parser: found a match! Checking whether tree supports verb 'pull'
    parser: it does! Setting oDO to tree
tree . verb_dict[pull]= <function HiddenExitTrigger.trigger_reveal_exit at 0x10387b2f0>
========================================
New DebugLog session started Mon Oct 10 20:16:39 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
========================================
New DebugLog session started Mon Oct 10 20:20:15 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x10288b390>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10288b8d0>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the east exit!
other creatures in this room include: {<player.Player object at 0x10288b390>}
perceived a message The bird goes east. in Creature.perceive()
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room woods
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bookcase 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x10288b7f0>>
self.contents = [<bookcase.Bookcase object at 0x10288bba8>, <player.Player object at 0x10288b390>]
contents_minus_user = [<bookcase.Bookcase object at 0x10288bba8>]
beat
User input with aliases resolved:
    look bookcase 
parser: a is 0, self.words[a] is look
parser: a is 1, self.words[a] is bookcase
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO bookcase, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bookcase, but supports verb look
parser: possible_nouns includes bookcase 
  parser: found a match! Checking whether bookcase supports verb 'look'
    parser: it does! Setting oDO to bookcase
bookcase . verb_dict[look]= <bound method Thing.look_at of <bookcase.Bookcase object at 0x10288bba8>>
Called Thing.look_at()
beat
other creatures in this room include: set()
User input with aliases resolved:
    pull book 
parser: a is 0, self.words[a] is pull
parser: a is 1, self.words[a] is book
parser: possible_nouns includes entryway 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bookcase 
  parser: doesn't match user-typed DO book, but supports verb pull
    parser: setting oDO to bookcase
parser: possible_nouns includes testplayer 
bookcase . verb_dict[pull]= <bound method Bookcase.handle_book of <bookcase.Bookcase object at 0x10288bba8>>
other creatures in this room include: {<player.Player object at 0x10288b390>}
perceived a message The bookcase shakes, and swings open, revealing a secret staircase leading down. in Creature.perceive()
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bookcase 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x10288b7f0>>
self.contents = [<bookcase.Bookcase object at 0x10288bba8>, <player.Player object at 0x10288b390>]
contents_minus_user = [<bookcase.Bookcase object at 0x10288bba8>]
beat
other creatures in this room include: set()
User input with aliases resolved:
    go down 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is down
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO down, but supports verb go
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bookcase 
parser: possible_nouns includes testplayer 
entryway . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10288b7f0>>
verb function go_to: words == 
['go', 'down']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
secret hideout has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes secret hideout 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to secret hideout
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
secret hideout . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10288b9b0>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
User input with aliases resolved:
    go northeast 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is northeast
parser: possible_nouns includes kitchen 
  parser: doesn't match user-typed DO northeast, but supports verb go
    parser: setting oDO to kitchen
parser: possible_nouns includes testplayer 
parser: possible_nouns includes plate 
parser: possible_nouns includes testplayer 
kitchen . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10288b710>>
verb function go_to: words == 
['go', 'northeast']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bookcase 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x10288b7f0>>
========================================
New DebugLog session started Mon Oct 10 20:45:13 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x1038dd470>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
========================================
New DebugLog session started Sat Oct 15 20:12:01 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
feild has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x104b529b0>>
self.contents = [<container.Container object at 0x104b5a198>, <creature.NPC object at 0x104b5a3c8>, <player.Player object at 0x104b52518>]
contents_minus_user = [<container.Container object at 0x104b5a198>, <creature.NPC object at 0x104b5a3c8>]
beat
other creatures in this room include: {<player.Player object at 0x104b52518>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
Replacing alias 'n' with expansion 'go north'
User input with aliases resolved:
    go north 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is north
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO north, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104b529b0>>
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
Trying to move to the in exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room shack
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes forest1 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to forest1
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
forest1 . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x104b52b70>>
self.contents = [<player.Player object at 0x104b52518>]
contents_minus_user = []
beat
other creatures in this room include: set()
beat
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes forest1 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to forest1
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
forest1 . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104b52b70>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes forest2 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to forest2
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
forest2 . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x104b52c50>>
self.contents = [<player.Player object at 0x104b52518>]
contents_minus_user = []
beat
beat
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes forest2 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to forest2
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
forest2 . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104b52c50>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
feild has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes feild 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to feild
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
feild . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x104b52d30>>
self.contents = [<player.Player object at 0x104b52518>]
contents_minus_user = []
beat
Trying to move to the west exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
User input with aliases resolved:
    go in 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is in
parser: possible_nouns includes feild 
  parser: doesn't match user-typed DO in, but supports verb go
    parser: setting oDO to feild
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
feild . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104b52d30>>
verb function go_to: words == 
['go', 'in']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the south exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
beat
other creatures in this room include: {<player.Player object at 0x104b52518>}
perceived a message The butterfly says: wh in Creature.perceive()
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes shack 
  parser: doesn't match user-typed DO None, but supports verb look
========================================
New DebugLog session started Fri Oct 28 07:48:25 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes beech 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x10168cbe0>>
self.contents = [<container.Container object at 0x1016923c8>, <creature.NPC object at 0x1016925f8>, <scenery.Scenery object at 0x101692828>, <scenery.Scenery object at 0x101692940>, <player.Player object at 0x10168c6a0>]
contents_minus_user = [<container.Container object at 0x1016923c8>, <creature.NPC object at 0x1016925f8>, <scenery.Scenery object at 0x101692828>, <scenery.Scenery object at 0x101692940>]
beat
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
User input with aliases resolved:
    look elm 
parser: a is 0, self.words[a] is look
parser: a is 1, self.words[a] is elm
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO elm, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO elm, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO elm, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO elm, but supports verb look
parser: possible_nouns includes elm 
  parser: found a match! Checking whether elm supports verb 'look'
    parser: it does! Setting oDO to elm
elm . verb_dict[look]= <bound method Thing.look_at of <scenery.Scenery object at 0x101692828>>
Called Thing.look_at()
beat
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird says: tweet tweet in Creature.perceive()
beat
User input with aliases resolved:
    look beech 
parser: a is 0, self.words[a] is look
parser: a is 1, self.words[a] is beech
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO beech, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO beech, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO beech, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO beech, but supports verb look
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO beech, but supports verb look
parser: possible_nouns includes beech 
  parser: found a match! Checking whether beech supports verb 'look'
    parser: it does! Setting oDO to beech
beech . verb_dict[look]= <bound method Thing.look_at of <scenery.Scenery object at 0x101692940>>
Called Thing.look_at()
beat
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
User input with aliases resolved:
    look elm 
parser: a is 0, self.words[a] is look
parser: a is 1, self.words[a] is elm
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO elm, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO elm, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO elm, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO elm, but supports verb look
parser: possible_nouns includes elm 
  parser: found a match! Checking whether elm supports verb 'look'
    parser: it does! Setting oDO to elm
elm . verb_dict[look]= <bound method Thing.look_at of <scenery.Scenery object at 0x101692828>>
Called Thing.look_at()
beat
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
beat
User input with aliases resolved:
    hug elm 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is elm
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes elm 
  parser: found a match! Checking whether elm supports verb 'hug'
    parser: it does! Setting oDO to elm
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x101692828>>
beat
Trying to move to the north exit!
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird goes north. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest1
beat
other creatures in this room include: set()
User input with aliases resolved:
    go north 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is north
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO north, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10168cbe0>>
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for testplayer's 79 weight and 66 volume
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
beat
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird says: tweet tweet in Creature.perceive()
beat
beat
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
beat
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
beat
beat
Trying to move to the south exit!
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird goes south. in Creature.perceive()
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room woods
beat
other creatures in this room include: set()
User input with aliases resolved:
    go south 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is south
parser: possible_nouns includes forest1 
  parser: doesn't match user-typed DO south, but supports verb go
    parser: setting oDO to forest1
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
forest1 . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10168cda0>>
verb function go_to: words == 
['go', 'south']
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x10168cbe0>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes entryway 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to entryway
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bookcase 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
entryway . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x10168cb00>>
self.contents = [<bookcase.Bookcase object at 0x101692278>, <creature.NPC object at 0x1016925f8>, <player.Player object at 0x10168c6a0>]
contents_minus_user = [<bookcase.Bookcase object at 0x101692278>, <creature.NPC object at 0x1016925f8>]
beat
other creatures in this room include: {<player.Player object at 0x10168c6a0>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
User input with aliases resolved:
    take book 
parser: a is 0, self.words[a] is take
parser: a is 1, self.words[a] is book
parser: possible_nouns includes entryway 
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO book, but supports verb take
    parser: setting oDO to testplayer
parser: possible_nouns includes bookcase 
  parser: doesn't match user-typed DO book, but supports verb take
parser: possible_nouns includes bird 
  parser: doesn't match user-typed DO book, but supports verb take
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO book, but supports verb take
testplayer . verb_dict[take]= <bound method Thing.take of <player.Player object at 0x10168c6a0>>
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for testplayer's 79 weight and 66 volume
beat
beat
User input with aliases resolved:
    inventory 
parser: a is 0, self.words[a] is inventory
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb inventory
    parser: setting oDO to testplayer
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb inventory
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb inventory
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb inventory
testplayer . verb_dict[inventory]= <bound method Player.inventory of <player.Player object at 0x10168c6a0>>
beat
other creatures in this room include: set()
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to testplayer
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
testplayer . verb_dict[look]= <bound method Container.look_at of <player.Player object at 0x10168c6a0>>
Called Container.look_at()
Called Thing.look_at()
beat
beat
other creatures in this room include: set()
User input with aliases resolved:
    drop player 
parser: a is 0, self.words[a] is drop
parser: a is 1, self.words[a] is player
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO player, but supports verb drop
    parser: setting oDO to testplayer
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO player, but supports verb drop
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO player, but supports verb drop
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO player, but supports verb drop
testplayer . verb_dict[drop]= <bound method Thing.drop of <player.Player object at 0x10168c6a0>>
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to testplayer
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
testplayer . verb_dict[look]= <bound method Container.look_at of <player.Player object at 0x10168c6a0>>
Called Container.look_at()
Called Thing.look_at()
beat
other creatures in this room include: set()
beat
========================================
New DebugLog session started Fri Oct 28 07:52:59 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the north exit!
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The bird goes north. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest1
beat
User input with aliases resolved:
    go north 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is north
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO north, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f55be0>>
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for testplayer's 79 weight and 66 volume
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
Trying to move to the in exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room shack
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
beat
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The bird says: tweet tweet in Creature.perceive()
beat
beat
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
beat
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
beat
beat
Trying to move to the east exit!
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The bird goes east. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest2
beat
other creatures in this room include: set()
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes forest1 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to forest1
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
forest1 . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f55da0>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest2 has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the east exit!
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The bird goes east. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room field
beat
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes forest2 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to forest2
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
forest2 . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f55e80>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
field has room for testplayer's 79 weight and 66 volume
beat
beat
User input with aliases resolved:
    go in shack 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is in
parser: a is 2, self.words[a] is shack
parser: possible_nouns includes field 
  parser: doesn't match user-typed DO in shack, but supports verb go
    parser: setting oDO to field
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
parser: possible_nouns includes testplayer 
field . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f55f60>>
verb function go_to: words == 
['go', 'in', 'shack']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
Trying to move to the out exit!
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The butterfly goes out. in Creature.perceive()
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
other creatures in this room include: {<creature.NPC object at 0x101f5b5f8>}
perceived a message The butterfly arrives. in Creature.perceive()
Moved to new room field
User input with aliases resolved:
    go out 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is out
parser: possible_nouns includes shack 
  parser: doesn't match user-typed DO out, but supports verb go
    parser: setting oDO to shack
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
shack . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f5b080>>
verb function go_to: words == 
['go', 'out']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
field has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the in exit!
other creatures in this room include: {<creature.NPC object at 0x101f5b710>, <player.Player object at 0x101f556a0>}
perceived a message The bird goes in. in Creature.perceive()
perceived a message The bird goes in. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room shack
beat
User input with aliases resolved:
    go in 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is in
parser: possible_nouns includes field 
  parser: doesn't match user-typed DO in, but supports verb go
    parser: setting oDO to field
parser: possible_nouns includes testplayer 
parser: possible_nouns includes butterfly 
parser: possible_nouns includes testplayer 
field . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f55f60>>
verb function go_to: words == 
['go', 'in']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
shack has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the out exit!
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The bird goes out. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for bird's 200 weight and 0 volume
other creatures in this room include: {<creature.NPC object at 0x101f5b710>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room field
beat
User input with aliases resolved:
    go out 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is out
parser: possible_nouns includes shack 
  parser: doesn't match user-typed DO out, but supports verb go
    parser: setting oDO to shack
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
shack . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f5b080>>
verb function go_to: words == 
['go', 'out']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
field has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the in exit!
other creatures in this room include: {<creature.NPC object at 0x101f5b710>, <player.Player object at 0x101f556a0>}
perceived a message The bird goes in. in Creature.perceive()
perceived a message The bird goes in. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room shack
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The butterfly goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest2
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes field 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to field
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
field . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x101f55f60>>
self.contents = [<player.Player object at 0x101f556a0>]
contents_minus_user = []
beat
beat
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes field 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to field
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
field . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f55f60>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
beat
other creatures in this room include: set()
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The butterfly goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest1
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
parser: possible_nouns includes forest2 
  parser: doesn't match user-typed DO west, but supports verb go
    parser: setting oDO to forest2
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
forest2 . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f55e80>>
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
beat
other creatures in this room include: set()
beat
beat
Trying to move to the out exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room field
beat
Trying to move to the south exit!
other creatures in this room include: {<player.Player object at 0x101f556a0>}
perceived a message The butterfly goes south. in Creature.perceive()
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room woods
User input with aliases resolved:
    go south 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is south
parser: possible_nouns includes forest1 
  parser: doesn't match user-typed DO south, but supports verb go
    parser: setting oDO to forest1
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
forest1 . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x101f55da0>>
verb function go_to: words == 
['go', 'south']
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
beat
other creatures in this room include: set()
beat
beat
other creatures in this room include: set()
beat
beat
other creatures in this room include: set()
beat
beat
other creatures in this room include: set()
beat
========================================
New DebugLog session started Sun Oct 30 00:56:31 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for cabnets's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for sink's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bottle's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the north exit!
other creatures in this room include: {<player.Player object at 0x104b8cb70>}
perceived a message The bird goes north. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest1
beat
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO None, but supports verb look
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes beech 
  parser: doesn't match user-typed DO None, but supports verb look
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO None, but supports verb look
woods . verb_dict[look]= <bound method Room.look_at of <room.Room object at 0x104b91080>>
self.contents = [<container.Container object at 0x104b91828>, <scenery.Scenery object at 0x104b91c88>, <scenery.Scenery object at 0x104b91da0>, <player.Player object at 0x104b8cb70>]
contents_minus_user = [<container.Container object at 0x104b91828>, <scenery.Scenery object at 0x104b91c88>, <scenery.Scenery object at 0x104b91da0>]
beat
Trying to move to the south exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 179 weight and 76 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: {<player.Player object at 0x104b8cb70>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room woods
beat
User input with aliases resolved:
    get bird 
parser: a is 0, self.words[a] is get
parser: a is 1, self.words[a] is bird
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO bird, but supports verb get
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bird, but supports verb get
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO bird, but supports verb get
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO bird, but supports verb get
parser: possible_nouns includes beech 
  parser: doesn't match user-typed DO bird, but supports verb get
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bird, but supports verb get
parser: possible_nouns includes bird 
  parser: found a match! Checking whether bird supports verb 'get'
    parser: it does! Setting oDO to bird
bird . verb_dict[get]= <bound method Thing.take of <creature.NPC object at 0x104b91a58>>
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for bird's 200 weight and 0 volume
beat
no exits, returning
beat
Trying to move to the west exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest2
User input with aliases resolved:
    examine bird 
parser: a is 0, self.words[a] is examine
parser: a is 1, self.words[a] is bird
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO bird, but supports verb examine
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bird, but supports verb examine
parser: possible_nouns includes bird 
  parser: found a match! Checking whether bird supports verb 'examine'
    parser: it does! Setting oDO to bird
bird . verb_dict[examine]= <bound method Container.look_at of <creature.NPC object at 0x104b91a58>>
Called Container.look_at()
Called Thing.look_at()
beat
no exits, returning
beat
User input with aliases resolved:
    drop bird 
parser: a is 0, self.words[a] is drop
parser: a is 1, self.words[a] is bird
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bird, but supports verb drop
    parser: setting oDO to testplayer
parser: possible_nouns includes bird 
  parser: found a match! Checking whether bird supports verb 'drop'
    parser: it does! Setting oDO to bird
bird . verb_dict[drop]= <bound method Thing.drop of <creature.NPC object at 0x104b91a58>>
in insert
going to start looping
done looping - carrying 179 weight and 76 volume
woods has room for bird's 200 weight and 0 volume
beat
beat
User input with aliases resolved:
    go north 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is north
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO north, but supports verb go
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
woods . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104b91080>>
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room field
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
parser: possible_nouns includes forest1 
  parser: doesn't match user-typed DO east, but supports verb go
    parser: setting oDO to forest1
parser: possible_nouns includes testplayer 
parser: possible_nouns includes testplayer 
forest1 . verb_dict[go]= <bound method Room.go_to of <room.Room object at 0x104b91240>>
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
========================================
New DebugLog session started Tue Nov  1 22:40:37 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for cabnets's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for sink's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for scarf's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bottle's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the north exit!
other creatures in this room include: {<player.Player object at 0x104253dd8>}
perceived a message The bird goes north. in Creature.perceive()
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest1
beat
User input with aliases resolved:
    get bag 
parser: a is 0, self.words[a] is get
parser: a is 1, self.words[a] is bag
Parser: Possible objects matching sV '%s': [(<container.Container object at 0x104246a90>, <action.Action object at 0x104246b00>), (<scenery.Scenery object at 0x104246ef0>, <action.Action object at 0x104246f60>), (<scenery.Scenery object at 0x104260048>, <action.Action object at 0x1042600b8>), (<player.Player object at 0x104253dd8>, <action.Action object at 0x104253e80>), (<player.Player object at 0x104253dd8>, <action.Action object at 0x104253e80>)]
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO bag, but supports verb get
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bag, but supports verb get
parser: possible_nouns includes bag 
  parser: found a match! Checking whether bag supports verb 'get'
    parser: it does! Setting oDO to bag
bag . verb_dict[get]= <bound method Thing.take of <container.Container object at 0x104246a90>>
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for bag's 100 weight and 10 volume
beat
beat
User input with aliases resolved:
    drop bag 
parser: a is 0, self.words[a] is drop
parser: a is 1, self.words[a] is bag
Parser: Possible objects matching sV '%s': [(<container.Container object at 0x104246a90>, <action.Action object at 0x104246b38>), (<scenery.Scenery object at 0x104246ef0>, <action.Action object at 0x104246f98>), (<scenery.Scenery object at 0x104260048>, <action.Action object at 0x1042600f0>), (<player.Player object at 0x104253dd8>, <action.Action object at 0x104253eb8>), (<player.Player object at 0x104253dd8>, <action.Action object at 0x104253eb8>)]
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO bag, but supports verb drop
    parser: setting oDO to testplayer
parser: possible_nouns includes bag 
  parser: found a match! Checking whether bag supports verb 'drop'
    parser: it does! Setting oDO to bag
bag . verb_dict[drop]= <bound method Thing.drop of <container.Container object at 0x104246a90>>
in insert
going to start looping
done looping - carrying 79 weight and 66 volume
woods has room for bag's 100 weight and 10 volume
beat
other creatures in this room include: set()
beat
Trying to move to the west exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest2
User input with aliases resolved:
    get elm tree 
parser: a is 0, self.words[a] is get
parser: a is 1, self.words[a] is elm
parser: a is 2, self.words[a] is tree
Parser: Possible objects matching sV '%s': [(<scenery.Scenery object at 0x104246ef0>, <action.Action object at 0x104246f60>), (<scenery.Scenery object at 0x104260048>, <action.Action object at 0x1042600b8>), (<player.Player object at 0x104253dd8>, <action.Action object at 0x104253e80>), (<container.Container object at 0x104246a90>, <action.Action object at 0x104246b00>), (<player.Player object at 0x104253dd8>, <action.Action object at 0x104253e80>)]
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO elm tree, but supports verb get
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO elm tree, but supports verb get
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO elm tree, but supports verb get
parser: possible_nouns includes beech 
  parser: doesn't match user-typed DO elm tree, but supports verb get
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO elm tree, but supports verb get
parser: possible_nouns includes bag 
  parser: doesn't match user-typed DO elm tree, but supports verb get
woods . verb_dict[get]= <bound method Thing.take of <room.Room object at 0x1042462e8>>
beat
Trying to move to the south exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 179 weight and 76 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: {<player.Player object at 0x104253dd8>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room woods
beat
User input with aliases resolved:
    examine elm 
parser: a is 0, self.words[a] is examine
parser: a is 1, self.words[a] is elm
Parser: Possible objects matching sV '%s': [(<scenery.Scenery object at 0x104246ef0>, <action.Action object at 0x104246f28>), (<scenery.Scenery object at 0x104260048>, <action.Action object at 0x104260080>), (<player.Player object at 0x104253dd8>, <action.Action object at 0x104253e10>), (<container.Container object at 0x104246a90>, <action.Action object at 0x104246ac8>), (<creature.NPC object at 0x104246cc0>, <action.Action object at 0x104246cf8>), (<player.Player object at 0x104253dd8>, <action.Action object at 0x104253e10>)]
parser: possible_nouns includes woods 
  parser: doesn't match user-typed DO elm, but supports verb examine
    parser: setting oDO to woods
parser: possible_nouns includes testplayer 
  parser: doesn't match user-typed DO elm, but supports verb examine
parser: possible_nouns includes elm 
  parser: found a match! Checking whether elm supports verb 'examine'
    parser: it does! Setting oDO to elm
elm . verb_dict[examine]= <bound method Thing.look_at of <scenery.Scenery object at 0x104246ef0>>
Called Thing.look_at()
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x104253dd8>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
========================================
New DebugLog session started Tue Nov  1 23:02:31 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for cabnets's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for sink's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for scarf's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bottle's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x10438cdd8>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
User input with aliases resolved:
    hug elm 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is elm
Parser: Possible objects matching sV '%s': [(<scenery.Scenery object at 0x104390ef0>, <action.Action object at 0x104397048>)]
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
  parser: found a match! Checking whether elm supports verb 'hug'
    parser: it does! Setting oDO to elm
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x104390ef0>>
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 179 weight and 76 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: {<player.Player object at 0x10438cdd8>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room woods
beat
User input with aliases resolved:
    hug big tree 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is big
parser: a is 2, self.words[a] is tree
Parser: Possible objects matching sV '%s': [(<scenery.Scenery object at 0x104390ef0>, <action.Action object at 0x104397048>)]
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO big tree, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x104390ef0>>
beat
beat
Trying to move to the in exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room shack
User input with aliases resolved:
    hug elm tree 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is elm
parser: a is 2, self.words[a] is tree
Parser: Possible objects matching sV '%s': [(<scenery.Scenery object at 0x104390ef0>, <action.Action object at 0x104397048>)]
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO elm tree, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x104390ef0>>
beat
other creatures in this room include: {<player.Player object at 0x10438cdd8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
beat
beat
beat
other creatures in this room include: {<player.Player object at 0x10438cdd8>}
perceived a message The bird says: Tweet! in Creature.perceive()
beat
Trying to move to the out exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room field
User input with aliases resolved:
    hug old tree 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is old
parser: a is 2, self.words[a] is tree
Parser: Possible objects matching sV '%s': [(<scenery.Scenery object at 0x104390ef0>, <action.Action object at 0x104397048>)]
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO old tree, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bird 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x104390ef0>>
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x10438cdd8>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
User input with aliases resolved:
    hug old tree 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is old
parser: a is 2, self.words[a] is tree
Parser: Possible objects matching sV '%s': [(<scenery.Scenery object at 0x104390ef0>, <action.Action object at 0x104397048>)]
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO old tree, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x104390ef0>>
beat
beat
User input with aliases resolved:
    climb elm 
parser: a is 0, self.words[a] is climb
parser: a is 1, self.words[a] is elm
Parser: Possible objects matching sV '%s': [(<scenery.Scenery object at 0x104390ef0>, <action.Action object at 0x104390fd0>)]
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
  parser: found a match! Checking whether elm supports verb 'climb'
    parser: it does! Setting oDO to elm
elm . verb_dict[climb]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x104390ef0>>
beat
other creatures in this room include: set()
========================================
New DebugLog session started Tue Nov  1 23:16:17 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for cabnets's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for sink's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for scarf's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bottle's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
User input with aliases resolved:
    hug beech 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is beech
Parser: Possible objects matching sV '[(<scenery.Scenery object at 0x10287ef28>, <action.Action object at 0x102898080>)]': 
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO beech, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
  parser: found a match! Checking whether beech supports verb 'hug'
    parser: it does not! beech probably not the intended direct object.
parser: possible_nouns includes testplayer 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x10287ef28>>
beat
other creatures in this room include: {<player.Player object at 0x10288ce10>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
User input with aliases resolved:
    hug old tree 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is old
parser: a is 2, self.words[a] is tree
Parser: Possible objects matching sV '[(<scenery.Scenery object at 0x10287ef28>, <action.Action object at 0x102898080>)]': 
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO old tree, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x10287ef28>>
beat
other creatures in this room include: {<player.Player object at 0x10288ce10>}
perceived a message The bird says: tweet tweet in Creature.perceive()
beat
Trying to move to the in exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room shack
User input with aliases resolved:
    hug massive tree 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is massive
parser: a is 2, self.words[a] is tree
Parser: Possible objects matching sV '[(<scenery.Scenery object at 0x10287ef28>, <action.Action object at 0x102898080>)]': 
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO massive tree, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x10287ef28>>
beat
other creatures in this room include: {<player.Player object at 0x10288ce10>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
User input with aliases resolved:
    hug carved tree 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is carved
parser: a is 2, self.words[a] is tree
Parser: Possible objects matching sV '[(<scenery.Scenery object at 0x10287ef28>, <action.Action object at 0x102898080>)]': 
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO carved tree, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x10287ef28>>
beat
other creatures in this room include: {<player.Player object at 0x10288ce10>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
beat
User input with aliases resolved:
    hug asdf 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is asdf
Parser: Possible objects matching sV '[(<scenery.Scenery object at 0x10287ef28>, <action.Action object at 0x102898080>)]': 
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes bird 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO asdf, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x10287ef28>>
beat
Trying to move to the west exit!
other creatures in this room include: {<player.Player object at 0x10288ce10>}
perceived a message The bird goes west. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room entryway
beat
User input with aliases resolved:
    hug beech tree 
parser: a is 0, self.words[a] is hug
parser: a is 1, self.words[a] is beech
parser: a is 2, self.words[a] is tree
Parser: Possible objects matching sV '[(<scenery.Scenery object at 0x10287ef28>, <action.Action object at 0x102898080>)]': 
parser: possible_nouns includes woods 
parser: possible_nouns includes testplayer 
parser: possible_nouns includes bag 
parser: possible_nouns includes elm 
  parser: doesn't match user-typed DO beech tree, but supports verb hug
    parser: setting oDO to elm
parser: possible_nouns includes beech 
parser: possible_nouns includes testplayer 
elm . verb_dict[hug]= <bound method Scenery.handle_scenery_verb of <scenery.Scenery object at 0x10287ef28>>
beat
Trying to move to the south exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room hallway
beat
User input with aliases resolved:
    hug elm tree 
parser: a is 0, self.words[a] is hug
========================================
New DebugLog session started Wed Nov  2 02:31:19 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for cabnets's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for sink's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for scarf's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bottle's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
Trying to move to the north exit!
other creatures in this room include: {<player.Player object at 0x103384f60>}
perceived a message The bird goes north. in Creature.perceive()
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest1
beat
User input with aliases resolved:
    go bnorth 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is bnorth
Parser: Possible objects matching sV 'woods': 
matched_objects are: 
verb function go_to: words == 
['go', 'bnorth']
beat
Trying to move to the south exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 179 weight and 76 volume
woods has room for bird's 200 weight and 0 volume
other creatures in this room include: {<player.Player object at 0x103384f60>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room woods
beat
User input with aliases resolved:
    go north 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is north
Parser: Possible objects matching sV 'woods': 
matched_objects are: 
verb function go_to: words == 
['go', 'north']
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for testplayer's 79 weight and 66 volume
beat
beat
Trying to move to the west exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest2
User input with aliases resolved:
    go south 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is south
Parser: Possible objects matching sV 'forest1': 
matched_objects are: 
verb function go_to: words == 
['go', 'south']
verb function go_to: words == 
['go', 'south']
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: {<player.Player object at 0x103384f60>}
perceived a message The bird says: Tweet! in Creature.perceive()
beat
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
Parser: Possible objects matching sV 'woods': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
Parser: Possible objects matching sV 'entryway': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
beat
other creatures in this room include: set()
beat
Trying to move to the west exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest1
Replacing alias 's' with expansion 'go south'
User input with aliases resolved:
    go south 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is south
Parser: Possible objects matching sV 'entryway': 
matched_objects are: 
verb function go_to: words == 
['go', 'south']
verb function go_to: words == 
['go', 'south']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
hallway has room for testplayer's 79 weight and 66 volume
beat
beat
Replacing alias 'n' with expansion 'go north'
User input with aliases resolved:
    go north 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is north
Parser: Possible objects matching sV 'hallway': 
matched_objects are: 
verb function go_to: words == 
['go', 'north']
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is west
Parser: Possible objects matching sV 'entryway': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
beat
other creatures in this room include: set()
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest2
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
parser: a is 0, self.words[a] is go
parser: a is 1, self.words[a] is east
Parser: Possible objects matching sV 'entryway': 
matched_objects are: 
verb function go_to: words == 
['go', 'east']
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: {<player.Player object at 0x103384f60>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
User input with aliases resolved:
    get bird 
parser: a is 0, self.words[a] is get
parser: a is 1, self.words[a] is bird
Parser: Possible objects matching sV 'woods bag elm beech bird testplayer testplayer': 
matched_objects are: bird
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for bird's 200 weight and 0 volume
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
other creatures in this room include: set()
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
parser: a is 0, self.words[a] is look
Parser: Possible objects matching sV 'woods bird bag elm beech testplayer testplayer': 
========================================
New DebugLog session started Thu Nov  3 23:09:34 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for cabnets's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for sink's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for scarf's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bottle's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
Parser: Possible objects matching sV 'woods bag bird elm beech testplayer testplayer': 
self.contents = [<container.Container object at 0x103891f60>, <creature.NPC object at 0x1038971d0>, <scenery.Scenery object at 0x103897400>, <scenery.Scenery object at 0x103897588>, <player.Player object at 0x1038910b8>]
contents_minus_user = [<container.Container object at 0x103891f60>, <creature.NPC object at 0x1038971d0>, <scenery.Scenery object at 0x103897400>, <scenery.Scenery object at 0x103897588>]
beat
other creatures in this room include: {<player.Player object at 0x1038910b8>}
perceived a message The bird says: Tweet! in Creature.perceive()
beat
User input with aliases resolved:
    hug tree 
Parser: Possible objects matching sV 'elm': 
matched_objects are: elm beech
beat
Trying to move to the north exit!
other creatures in this room include: {<player.Player object at 0x1038910b8>}
perceived a message The bird goes north. in Creature.perceive()
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest1
beat
Trying to move to the west exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest2
User input with aliases resolved:
    climb tree 
Parser: Possible objects matching sV 'elm': 
matched_objects are: elm beech
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for bird's 200 weight and 0 volume
other creatures in this room include: {<creature.NPC object at 0x1038972e8>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room forest2
beat
User input with aliases resolved:
    climb beech 
Parser: Possible objects matching sV 'elm': 
matched_objects are: beech
beat
beat
User input with aliases resolved:
    climb elm 
Parser: Possible objects matching sV 'elm': 
matched_objects are: elm
beat
other creatures in this room include: {<creature.NPC object at 0x1038972e8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
Trying to move to the east exit!
other creatures in this room include: {<creature.NPC object at 0x1038971d0>}
perceived a message The butterfly goes east. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room field
User input with aliases resolved:
    carve beech 
Parser: Possible objects matching sV 'beech': 
matched_objects are: beech
beat
beat
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
Parser: Possible objects matching sV 'woods': 
matched_objects are: 
verb function go_to: words == 
['go', 'east']
beat
other creatures in this room include: set()
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
Parser: Possible objects matching sV 'woods': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
beat
Replacing alias 'sw' with expansion 'go southwest'
User input with aliases resolved:
    go southwest 
Parser: Possible objects matching sV 'entryway': 
matched_objects are: 
verb function go_to: words == 
['go', 'southwest']
verb function go_to: words == 
['go', 'southwest']
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
User input with aliases resolved:
    get bottle 
Parser: Possible objects matching sV 'kitchen plate cabnets sink bottle testplayer testplayer': 
matched_objects are: bottle
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for bottle's 0 weight and 0 volume
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for bird's 200 weight and 0 volume
other creatures in this room include: {<creature.NPC object at 0x1038972e8>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room field
beat
User input with aliases resolved:
    fill bottle 
Parser: Possible objects matching sV 'sink': 
matched_objects are: bottle
other creatures in this room include: {<player.Player object at 0x1038910b8>}
perceived a message The bottle is filled with water at the sink. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bottle has room for water's 0 weight and 0 volume
beat
beat
other creatures in this room include: {<creature.NPC object at 0x1038971d0>}
perceived a message The butterfly says: wh in Creature.perceive()
User input with aliases resolved:
    drop bottle 
Parser: Possible objects matching sV 'kitchen bottle plate cabnets sink testplayer testplayer': 
matched_objects are: bottle
in insert
going to start looping
done looping - carrying 1079 weight and 67 volume
kitchen has room for bottle's 0 weight and 0 volume
beat
other creatures in this room include: {<creature.NPC object at 0x1038972e8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
User input with aliases resolved:
    fill bottle 
Parser: Possible objects matching sV 'sink': 
matched_objects are: bottle
other creatures in this room include: {<player.Player object at 0x1038910b8>}
perceived a message The bottle is filled with water at the sink. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bottle has room for water's 0 weight and 0 volume
beat
Trying to move to the west exit!
other creatures in this room include: {<creature.NPC object at 0x1038972e8>}
perceived a message The bird goes west. in Creature.perceive()
========================================
New DebugLog session started Thu Nov  3 23:11:28 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for cabnets's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for sink's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for scarf's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bottle's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
========================================
New DebugLog session started Fri Nov  4 00:49:32 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for cabnets's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for sink's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for scarf's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bottle's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
User input with aliases resolved:
    get tree 
Parser: Possible objects matching sV 'woods bag bird elm beech testplayer testplayer': 
matched_objects are: elm beech
beat
other creatures in this room include: {<player.Player object at 0x101790240>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
User input with aliases resolved:
    get elm 
Parser: Possible objects matching sV 'woods bag bird elm beech testplayer testplayer': 
matched_objects are: elm
beat
other creatures in this room include: {<player.Player object at 0x101790240>}
perceived a message The bird says: tweet tweet in Creature.perceive()
beat
User input with aliases resolved:
    get 
beat
other creatures in this room include: {<player.Player object at 0x101790240>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
Parser: Possible objects matching sV 'woods': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
other creatures in this room include: set()
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
Parser: Possible objects matching sV 'entryway bookcase testplayer testplayer': 
self.contents = [<bookcase.Bookcase object at 0x101790f98>, <player.Player object at 0x101790240>]
contents_minus_user = [<bookcase.Bookcase object at 0x101790f98>]
beat
Trying to move to the north exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest1
beat
other creatures in this room include: set()
User input with aliases resolved:
    get book 
Parser: Possible objects matching sV 'entryway bookcase bookcase testplayer testplayer': 
matched_objects are: bookcase
other creatures in this room include: {<player.Player object at 0x101790240>}
perceived a message The bookcase shakes, and swings open, revealing a secret staircase leading down. in Creature.perceive()
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest2
beat
User input with aliases resolved:
    get bookcase 
Parser: Possible objects matching sV 'entryway bookcase bookcase testplayer testplayer': 
matched_objects are: bookcase
beat
Trying to move to the east exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for bird's 200 weight and 0 volume
other creatures in this room include: {<creature.NPC object at 0x101793470>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room field
beat
User input with aliases resolved:
    get old book 
Parser: Possible objects matching sV 'entryway bookcase bookcase testplayer testplayer': 
matched_objects are: bookcase
other creatures in this room include: {<player.Player object at 0x101790240>}
perceived a message The bookcase shakes, and swings open, revealing a secret staircase leading down. in Creature.perceive()
beat
Trying to move to the in exit!
other creatures in this room include: {<creature.NPC object at 0x101793470>}
perceived a message The bird goes in. in Creature.perceive()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for bird's 200 weight and 0 volume
other creatures in this room include: set()
Moved to new room shack
beat
Trying to move to the west exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room forest2
========================================
New DebugLog session started Fri Nov  4 18:42:43 2016
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
bedroom has room for bed's 150000 weight and 6000 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for bookcase's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
woods has room for bag's 100 weight and 10 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
kitchen has room for plate's 1000 weight and 1 volume
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for bird's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for butterfly's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for elm's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for beech's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for cabnets's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for sink's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest1 has room for scarf's 200 weight and 0 volume
in insert
going to start looping
done looping - carrying 1000 weight and 1 volume
kitchen has room for bottle's 0 weight and 0 volume
in insert
going to start looping
done looping - carrying 300 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
Parser: Possible objects matching sV 'woods bag bird elm beech testplayer testplayer': 
self.contents = [<container.Container object at 0x103b96080>, <creature.NPC object at 0x103b962b0>, <scenery.Scenery object at 0x103b964e0>, <scenery.Scenery object at 0x103b96668>, <player.Player object at 0x1039064e0>]
contents_minus_user = [<container.Container object at 0x103b96080>, <creature.NPC object at 0x103b962b0>, <scenery.Scenery object at 0x103b964e0>, <scenery.Scenery object at 0x103b96668>]
beat
other creatures in this room include: {<player.Player object at 0x1039064e0>}
perceived a message The bird says: Tweet! in Creature.perceive()
beat
Replacing alias 'n' with expansion 'go north'
User input with aliases resolved:
    go north 
Parser: Possible objects matching sV 'woods': 
matched_objects are: 
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for testplayer's 79 weight and 66 volume
beat
beat
beat
other creatures in this room include: set()
beat
beat
other creatures in this room include: set()
beat
Replacing alias 'a' with expansion 'alias'
User input with aliases resolved:
    alias 
beat
other creatures in this room include: set()
beat
other creatures in this room include: set()
beat
other creatures in this room include: set()
beat
beat
Trying to move to the north exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 279 weight and 66 volume
forest1 has room for bird's 200 weight and 0 volume
other creatures in this room include: {<player.Player object at 0x1039064e0>}
perceived a message The bird arrives. in Creature.perceive()
Moved to new room forest1
beat
User input with aliases resolved:
    take bird 
Parser: Possible objects matching sV 'forest1 scarf testplayer bird testplayer': 
matched_objects are: bird
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
testplayer has room for bird's 200 weight and 0 volume
beat
no exits, returning
beat
Trying to move to the in exit!
other creatures in this room include: set()
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for butterfly's 0 weight and 0 volume
other creatures in this room include: set()
Moved to new room shack
Replacing alias 'i' with expansion 'inventory'
User input with aliases resolved:
    inventory 
Parser: Possible objects matching sV 'testplayer testplayer': 
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
no exits, returning
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
other creatures in this room include: set()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet tweet in Creature.perceive()
other creatures in this room include: set()
beat
other creatures in this room include: set()
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet, tweet, in Creature.perceive()
other creatures in this room include: set()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
other creatures in this room include: set()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet, tweet, in Creature.perceive()
other creatures in this room include: set()
beat
other creatures in this room include: set()
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
other creatures in this room include: set()
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: set()
beat
beat
no exits, returning
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: set()
beat
beat
no exits, returning
beat
beat
beat
other creatures in this room include: set()
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
other creatures in this room include: set()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet, tweet, in Creature.perceive()
other creatures in this room include: set()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
other creatures in this room include: set()
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: set()
beat
other creatures in this room include: set()
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
Parser: Possible objects matching sV 'forest1': 
matched_objects are: 
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for testplayer's 79 weight and 66 volume
beat
no exits, returning
beat
Replacing alias 'e' with expansion 'go east'
User input with aliases resolved:
    go east 
Parser: Possible objects matching sV 'forest2': 
matched_objects are: 
verb function go_to: words == 
['go', 'east']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for testplayer's 79 weight and 66 volume
beat
no exits, returning
beat
beat
beat
Replacing alias 'i' with expansion 'go in'
User input with aliases resolved:
    go in 
Parser: Possible objects matching sV 'field': 
matched_objects are: 
verb function go_to: words == 
['go', 'in']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
shack has room for testplayer's 79 weight and 66 volume
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: set()
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
Parser: Possible objects matching sV 'shack bird butterfly testplayer testplayer': 
self.contents = [<creature.NPC object at 0x103b963c8>, <player.Player object at 0x1039064e0>]
contents_minus_user = [<creature.NPC object at 0x103b963c8>]
beat
no exits, returning
beat
User input with aliases resolved:
    take butterfly 
Parser: Possible objects matching sV 'shack bird butterfly testplayer testplayer': 
matched_objects are: butterfly
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
testplayer has room for butterfly's 0 weight and 0 volume
beat
beat
creature holding this object is: testplayer
perceived a message The butterfly says: wh in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b962b0>}
perceived a message The butterfly says: wh in Creature.perceive()
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: tweet tweet in Creature.perceive()
beat
Replacing alias 'o' with expansion 'out'
User input with aliases resolved:
    out 
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet, tweet, in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
beat
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
creature holding this object is: testplayer
perceived a message The butterfly says: wh in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b962b0>}
perceived a message The butterfly says: wh in Creature.perceive()
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: tweet tweet in Creature.perceive()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet, tweet, in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
beat
beat
no exits, returning
beat
creature holding this object is: testplayer
perceived a message The butterfly says: wh in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b962b0>}
perceived a message The butterfly says: wh in Creature.perceive()
beat
no exits, returning
beat
beat
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go go west 
Parser: Possible objects matching sV 'shack': 
matched_objects are: 
verb function go_to: words == 
['go', 'go', 'west']
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
Parser: Possible objects matching sV 'shack': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
beat
beat
Replacing alias 'o' with expansion 'go out'
User input with aliases resolved:
    go out 
Parser: Possible objects matching sV 'shack': 
matched_objects are: 
verb function go_to: words == 
['go', 'out']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
field has room for testplayer's 79 weight and 66 volume
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet! in Creature.perceive()
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
Parser: Possible objects matching sV 'field': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
forest2 has room for testplayer's 79 weight and 66 volume
beat
no exits, returning
beat
creature holding this object is: testplayer
perceived a message The butterfly says: wh in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b962b0>}
perceived a message The butterfly says: wh in Creature.perceive()
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
Parser: Possible objects matching sV 'forest2': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for testplayer's 79 weight and 66 volume
beat
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
Parser: Possible objects matching sV 'forest1': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
Replacing alias 's' with expansion 'go south'
User input with aliases resolved:
    go south 
Parser: Possible objects matching sV 'forest1': 
matched_objects are: 
verb function go_to: words == 
['go', 'south']
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
Replacing alias 'n' with expansion 'go north'
User input with aliases resolved:
    go north 
Parser: Possible objects matching sV 'woods': 
matched_objects are: 
verb function go_to: words == 
['go', 'north']
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
forest1 has room for testplayer's 79 weight and 66 volume
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
Replacing alias 's' with expansion 'go south'
User input with aliases resolved:
    go south 
Parser: Possible objects matching sV 'forest1': 
matched_objects are: 
verb function go_to: words == 
['go', 'south']
in insert
going to start looping
done looping - carrying 100 weight and 10 volume
woods has room for testplayer's 79 weight and 66 volume
beat
beat
User input with aliases resolved:
    take tree 
Parser: Possible objects matching sV 'woods bird butterfly bag elm beech testplayer testplayer': 
matched_objects are: elm beech
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
creature holding this object is: testplayer
perceived a message The butterfly says: wh in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b962b0>}
perceived a message The butterfly says: wh in Creature.perceive()
Replacing alias 'i' with expansion 'inventory'
User input with aliases resolved:
    inventory mean the massive old elm tree 
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: tweet tweet in Creature.perceive()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet, tweet, in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
Replacing alias 'i' with expansion 'i'
User input with aliases resolved:
    i 
Parser: Possible objects matching sV 'testplayer testplayer': 
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
beat
no exits, returning
User input with aliases resolved:
    inventory 
Parser: Possible objects matching sV 'testplayer testplayer': 
beat
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
Parser: Possible objects matching sV 'woods bird butterfly bag elm beech testplayer testplayer': 
self.contents = [<container.Container object at 0x103b96080>, <scenery.Scenery object at 0x103b964e0>, <scenery.Scenery object at 0x103b96668>, <player.Player object at 0x1039064e0>]
contents_minus_user = [<container.Container object at 0x103b96080>, <scenery.Scenery object at 0x103b964e0>, <scenery.Scenery object at 0x103b96668>]
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
User input with aliases resolved:
    take bag 
Parser: Possible objects matching sV 'woods bird butterfly bag elm beech testplayer testplayer': 
matched_objects are: bag
in insert
going to start looping
done looping - carrying 200 weight and 0 volume
testplayer has room for bag's 100 weight and 10 volume
beat
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
beat
beat
User input with aliases resolved:
    ` 
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet tweet, in Creature.perceive()
beat
creature holding this object is: testplayer
perceived a message The butterfly says: wh in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b962b0>}
perceived a message The butterfly says: wh in Creature.perceive()
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: tweet tweet in Creature.perceive()
beat
beat
creature holding this object is: testplayer
perceived a message The bird says: tweet, tweet, in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: tweet, tweet, in Creature.perceive()
beat
Replacing alias 'e' with expansion 'examine'
User input with aliases resolved:
    examine elm 
Parser: Possible objects matching sV 'woods bird butterfly bag elm beech testplayer testplayer': 
matched_objects are: elm
Called Thing.look_at()
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweety tweet-tweet in Creature.perceive()
beat
no exits, returning
User input with aliases resolved:
    hug elm 
Parser: Possible objects matching sV 'elm': 
matched_objects are: elm
beat
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look 
Parser: Possible objects matching sV 'woods bird butterfly bag elm beech testplayer testplayer': 
self.contents = [<scenery.Scenery object at 0x103b964e0>, <scenery.Scenery object at 0x103b96668>, <player.Player object at 0x1039064e0>]
contents_minus_user = [<scenery.Scenery object at 0x103b964e0>, <scenery.Scenery object at 0x103b96668>]
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet! in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet! in Creature.perceive()
beat
Replacing alias 'l' with expansion 'look'
User input with aliases resolved:
    look beech 
Parser: Possible objects matching sV 'woods bird butterfly bag elm beech testplayer testplayer': 
matched_objects are: beech
Called Thing.look_at()
beat
beat
no exits, returning
User input with aliases resolved:
    carve beech 
Parser: Possible objects matching sV 'beech': 
matched_objects are: beech
beat
creature holding this object is: testplayer
perceived a message The bird says: Tweet tweet in Creature.perceive()
other creatures in this room include: {<creature.NPC object at 0x103b963c8>}
perceived a message The bird says: Tweet tweet in Creature.perceive()
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
Parser: Possible objects matching sV 'woods': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
in insert
going to start looping
done looping - carrying 0 weight and 0 volume
entryway has room for testplayer's 79 weight and 66 volume
beat
no exits, returning
beat
Replacing alias 'w' with expansion 'go west'
User input with aliases resolved:
    go west 
Parser: Possible objects matching sV 'entryway': 
matched_objects are: 
verb function go_to: words == 
['go', 'west']
beat
no exits, returning
beat
no exits, returning
Replacing alias 'sw' with expansion 'go southwest'
User input with aliases resolved:
    go southwest 
Parser: Possible objects matching sV 'entryway': 
